// Generated by dojo-bindgen on Wed, 12 Jun 2024 06:17:57 +0000. Do not modify this file manually.
using System;
using System.Linq;
using System.Reflection;
using Dojo;
using Dojo.Starknet;
using JetBrains.Annotations;
using UnityEngine;

namespace Game
{
    // Model definition for `dojo_starter::models::skill::Skill` model
    public class Skill : ModelInstance {
        [ModelField("entityId")]
        public FieldElement entityId;

        [ModelField("gameId")]
        public uint gameId;

        [ModelField("attack")]
        public ushort attack;

        [ModelField("strongAttack")]
        public ushort strongAttack;

        [ModelField("healing")]
        public ushort healing;

        // Start is called before the first frame update
        void Start() {
        }

        // Update is called once per frame
        void Update() {
        }
    }

    public abstract record SkillType
    {
        public record Attack() : SkillType;
        public record StrongAttack() : SkillType;
        public record Healing() : SkillType;

        public static readonly Type[] SkillTypes = typeof(SkillType).GetNestedTypes(BindingFlags.Public)
            .OrderBy(t => t.MetadataToken)
            .ToArray();

        public static int GetIndex(SkillType value) {
            return Array.IndexOf(SkillTypes, value.GetType());
        }
    }

            

}