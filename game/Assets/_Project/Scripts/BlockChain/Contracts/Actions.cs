// Generated by dojo-bindgen on Wed, 12 Jun 2024 06:17:57 +0000. Do not modify this file manually.
using System;
using System.Threading.Tasks;
using Dojo;
using Dojo.Starknet;
using UnityEngine;
using dojo_bindings;
using System.Collections.Generic;

namespace Game
{
    // System definitions for `dojo_starter::systems::actions::actions` contract
    public class Actions : MonoBehaviour {
        // The address of this contract
        public string contractAddress;

        
        // Call the `dojo_init` system with the specified Account and calldata
        // Returns the transaction hash. Use `WaitForTransaction` to wait for the transaction to be confirmed.
        public async Task<FieldElement> dojo_init(Account account) {
            return await account.ExecuteRaw(new dojo.Call[] {
                new dojo.Call{
                    to = contractAddress,
                    selector = "dojo_init",
                    calldata = new dojo.FieldElement[] {
                        
                    }
                }
            });
        }
                

        
        // Call the `dojo_resource` system with the specified Account and calldata
        // Returns the transaction hash. Use `WaitForTransaction` to wait for the transaction to be confirmed.
        public async Task<FieldElement> dojo_resource(Account account) {
            return await account.ExecuteRaw(new dojo.Call[] {
                new dojo.Call{
                    to = contractAddress,
                    selector = "dojo_resource",
                    calldata = new dojo.FieldElement[] {
                        
                    }
                }
            });
        }
                

        
        // Call the `spawn` system with the specified Account and calldata
        // Returns the transaction hash. Use `WaitForTransaction` to wait for the transaction to be confirmed.
        public async Task<FieldElement> spawn(Account account, Character character) {
            Debug.Log("account: " + account);
            Debug.Log("Character: " + character);
            return await account.ExecuteRaw(new dojo.Call[] {
                new dojo.Call{
                    to = contractAddress,
                    selector = "spawn",
                    calldata = new dojo.FieldElement[] {
                        new FieldElement(Character.GetIndex(character)).Inner
                    }
                }
            });
        }
                

        
        // Call the `action` system with the specified Account and calldata
        // Returns the transaction hash. Use `WaitForTransaction` to wait for the transaction to be confirmed.
        public async Task<FieldElement> action(Account account, SkillType skill) {
            List<dojo.FieldElement> callData = new List<dojo.FieldElement>();
            callData.Add(new FieldElement(SkillType.GetIndex(skill)).Inner);

            return await account.ExecuteRaw(new dojo.Call[] {
                new dojo.Call{
                    to = contractAddress,
                    selector = "action",
                    calldata = callData.ToArray()
                }
            });
        }
                
    }
            

}